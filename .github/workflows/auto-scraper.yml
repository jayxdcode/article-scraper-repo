name: Auto Scraper (Inquirer + Philstar)

on:
  schedule:
    - cron: '0 2 * * *' # daily 02:00 UTC
  workflow_dispatch:
    inputs:
      site:
        description: 'Site to run (inquirer or philstar). Leave empty to run both.'
        required: false
        default: ''
      run_tests_first:
        description: 'Run tests first (true/false)'
        required: false
        default: 'true'

permissions:
  contents: write
  issues: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fail if package-lock.json missing
        run: |
          if [ ! -f package-lock.json ]; then
            echo "package-lock.json not found; this workflow expects the lockfile to be committed. Exiting."
            exit 1
          fi

      - name: Ensure node_modules present (exit on missing)
        run: |
          if [ -d "node_modules" ]; then
            echo "node_modules present — ready to run scrapers"
            ls -ld node_modules || true
          else
            echo "node_modules missing — please run deps-commit workflow to create and commit node_modules. Exiting."
            exit 1
          fi

      - name: Ensure Chromium binary committed
        run: |
          EXPECTED_CHROME_PATH="chrome/linux-121.0.6167.85/chrome-linux64/chrome"
          if [ ! -x "$EXPECTED_CHROME_PATH" ] && [ ! -f "$EXPECTED_CHROME_PATH" ]; then
            echo "Expected chrome binary not found at $EXPECTED_CHROME_PATH"
            echo "Please run deps-commit workflow to commit the chrome binary."
            exit 1
          fi
          echo "Found chrome binary at $EXPECTED_CHROME_PATH"

      - name: Install chromium snap
        run: |
          echo "Attempting install..."
          sudo snap install chromium

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run tests (optional)
        if: ${{ github.event.inputs.run_tests_first == 'true' }}
        run: |
          if [ "${{ github.event.inputs.site }}" = "" ]; then
            npm test
          else
            npm test -- --site="${{ github.event.inputs.site }}"
          fi

      - name: Run scrapers
        run: |
          if [ "${{ github.event.inputs.site }}" = "inquirer" ]; then
            npm run scrape:inquirer
          elif [ "${{ github.event.inputs.site }}" = "philstar" ]; then
            npm run scrape:philstar
          else
            npm run scrape:all
          fi

      - name: Commit scraped articles to main (best-effort)
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add articles || true
          git commit -m "chore(scraper): add scraped articles [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main || echo "Push failed (branch protection?)"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs
