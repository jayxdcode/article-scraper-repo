name: deps-commit

on:
  workflow_dispatch:
    inputs:
      generate_lock_if_missing:
        description: 'If true, create package-lock.json when missing (true/false)'
        required: false
        default: 'true'

permissions:
  contents: write

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Ensure package-lock.json (generate if allowed)
        id: ensure_lock
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then
            echo "lock_exists=true" >> $GITHUB_OUTPUT
          else
            if [ "${{ github.event.inputs.generate_lock_if_missing }}" = "true" ]; then
              echo "Generating package-lock.json (package-lock-only)"
              npm install --package-lock-only
              echo "lock_exists=true" >> $GITHUB_OUTPUT
            else
              echo "package-lock.json missing and generation disabled. Exiting."
              exit 1
            fi
          fi

      - name: Install dependencies (npm ci)
        run: |
          set -euo pipefail
          echo "Running npm ci to create node_modules"
          npm ci

      - name: Install Puppeteer browser (npx) and extract chrome binary
        run: |
          set -euo pipefail
          # try npx installer
          echo "Installing puppeteer browsers (prefer npx)"
          if npx --yes @puppeteer/browsers install chrome@121.0.6167.85; then
            echo "npx browser installer succeeded"
          else
            echo "npx browser installer failed; attempting to install puppeteer and let it fetch the browser"
            npm explore puppeteer -- npm run install || true
          fi

          # locate a likely chrome binary from installed puppeteer local-chromium
          # typical path: node_modules/puppeteer/.local-chromium/linux-*/chrome-linux64/chrome
          CHROME_SRC=$(find node_modules -type f -path "*/.local-chromium/*/chrome-linux64/chrome" -print -quit || true)
          echo "Found chrome candidate at: $CHROME_SRC"

          if [ -z "$CHROME_SRC" ]; then
            echo "No chrome binary found under node_modules/.local-chromium. Attempting fallback: apt-get chromium-browser"
            sudo apt-get update
            sudo apt-get install -y chromium-browser || true
            if command -v chromium-browser >/dev/null 2>&1; then
              CHROME_SRC=$(command -v chromium-browser)
              echo "Found system chromium at $CHROME_SRC"
            fi
          fi

          if [ -z "$CHROME_SRC" ]; then
            echo "Could not find a chrome binary to commit. Exiting with non-zero (you can still commit manually)."
            exit 1
          fi

          DEST_DIR="chrome/linux-121.0.6167.85/chrome-linux64"
          mkdir -p "$DEST_DIR"
          cp -v "$CHROME_SRC" "$DEST_DIR/chrome"
          chmod +x "$DEST_DIR/chrome"
          echo "Copied chrome to $DEST_DIR/chrome"

      - name: Commit package-lock.json, node_modules and chrome to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # add files. node_modules can be large â€” commit best-effort
          git add package-lock.json || true
          git add chrome || true
          git add node_modules || true

          git commit -m "ci(deps): add package-lock, node_modules and chrome binary [skip ci]" || echo "No changes to commit"

          # push to main (best-effort)
          git push origin HEAD:main || echo "Push failed (branch protection?)"

      - name: Upload artifact (node_modules tar) for debugging (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node_modules-nt
          path: node_modules
