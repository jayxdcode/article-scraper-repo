name: Scraper - Test

on:
  workflow_dispatch:
    inputs:
      site:
        description: 'Site to test (inquirer or philstar)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fail if package-lock.json missing
        run: |
          if [ ! -f package-lock.json ]; then
            echo "package-lock.json not found; this workflow expects the lockfile to be committed. Exiting."
            exit 1
          fi

      - name: Ensure node_modules present (exit on missing)
        run: |
          if [ -d "node_modules" ]; then
            echo "node_modules present â€” continuing"
            ls -ld node_modules || true
          else
            echo "node_modules is not present. Please run the 'deps-commit' workflow to create and commit node_modules. Exiting."
            exit 1
          fi

      - name: Setup Node (for running tests)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Ensure Chromium binary committed
        run: |
          # path relative to repo root where we expect chrome to be committed
          EXPECTED_CHROME_PATH="chrome/linux-121.0.6167.85/chrome-linux64/chrome"
          if [ ! -x "$EXPECTED_CHROME_PATH" ] && [ ! -f "$EXPECTED_CHROME_PATH" ]; then
            echo "Expected chrome binary not found at $EXPECTED_CHROME_PATH"
            echo "Please run deps-commit workflow to commit the chrome binary."
            exit 1
          fi
          echo "Found chrome binary at $EXPECTED_CHROME_PATH"

      - name: Install chromium snap
        run: |
          echo "Attempting install..."
          sudo snap install chromium

      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.site }}" = "" ]; then
            npm test
          else
            npm test -- --site="${{ github.event.inputs.site }}"
          fi

      - name: Upload test-results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
