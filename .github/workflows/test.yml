name: Scraper - Test

on:
  workflow_dispatch:
    inputs:
      site:
        description: 'Site to test (inquirer or philstar)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  ensure-lockfile:
    runs-on: ubuntu-latest
    outputs:
      created: ${{ steps.check_lock.outputs.created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check for package-lock.json
        id: check_lock
        run: |
          if [ -f package-lock.json ]; then
            echo "created=false" >> $GITHUB_OUTPUT
          else
            echo "created=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate package-lock.json (install packages)
        if: steps.check_lock.outputs.created == 'true'
        run: |
          # Install dependencies to generate a package-lock.json
          npm install --no-audit --no-fund

      - name: Commit package-lock.json
        if: steps.check_lock.outputs.created == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package-lock.json
          git commit -m "chore(ci): add package-lock.json" || echo "No changes to commit"
          # push back to the branch that triggered the workflow
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [ -z "$BRANCH" ] || [ "$BRANCH" = "$GITHUB_REF" ]; then
            # fallback to current branch name if GITHUB_REF is not a heads ref
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
          fi
          git push origin HEAD:"$BRANCH"

  run-tests:
    needs: ensure-lockfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4.3.0
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json','package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install deps
        run: |
          # If cache miss (node_modules doesn't exist) or lockfile is present, run npm ci
          if [ ! -d "node_modules" ] || [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.site }}" = "" ]; then
            npm test
          else
            npm test -- --site="${{ github.event.inputs.site }}"
          fi

      - name: Upload test-results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
